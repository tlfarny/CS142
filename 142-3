#include <iostream>
#include <iomanip>
#include <string>

using namespace std;

const int TOTALTIME = 5; //years

class Car{
private:
  string kind;
  int initPrice;
  int finalPrice;
  int milesPerYear;
  int efficiency;
public:
  Car(string kind, int initPrice, int finalPrice, int efficiency){
    this->kind = kind;
    this->initPrice = initPrice;
    this->finalPrice = finalPrice;
    this->efficiency = efficiency;
  };
  ~Car(){};

  int gasConsumed(int milesPerYear){
    int total = (milesPerYear * TOTALTIME) / this->efficiency;
    return total;
  }

  int getTotalCost(int milesPerYear, double gasPrice){
    int total = (initPrice - finalPrice) + (gasPrice * milesPerYear * TOTALTIME) / efficiency;
    return total;
  }

  void toString(int milesPerYear, double gasPrice){
    cout<<this->kind<<endl;
    cout<<"The total amount of gas consumed of the 5 years is "<<this->gasConsumed(milesPerYear)<<"."<<endl;
    cout<<"The total cost of owning the car is $"<<this->getTotalCost(milesPerYear, gasPrice)<<"."<<endl<<endl;
  }
};

void intChecker(int &value){
  while (value <= 0) {
    cout<<"Invalid. Please enter a value greater than 0."<<endl;
    cin>>value;
  }
}

void doubleChecker(double &value){
  while (value <= 0) {
    cout<<"Invalid. Please enter a value greater than 0."<<endl;
    cin>>value;
  }
}

void stringChecker(string &str){
  while (str != "Gas" && str != "Cost") {
    cout<<"Invalid input. Please enter either \"Gas\" or \"Cost\""<<endl;
    cin>>str;
    cout<<str<<endl;
  }
}

void getDetails( int &initCost, int &finalCost, int &fuelEfficiency){
  cout<<"Enter the starting price:"<<endl;
  cin>>initCost;
  intChecker(initCost);
  cout<<"Enter the final selling price:"<<endl;
  cin>>finalCost;
  intChecker(finalCost);
  cout<<"Enter the fuel efficiency of the vehicle:"<<endl;
  cin>>fuelEfficiency;
  intChecker(fuelEfficiency);
}

int main(int argc, char const *argv[]) {
  int milesPerYear;
  double gasPrice;
  int fuelEfficiency;
  int initCost;
  int finalCost;
  string gasOrCost;
  cout<<"::::::HYBRID  DETAILS::::::"<<endl;
  getDetails(initCost, finalCost, fuelEfficiency);
  Car hybrid = Car("Hybrid", initCost, finalCost, fuelEfficiency);
  cout<<"::::::REGULAR DETAILS::::::"<<endl;
  getDetails(initCost, finalCost, fuelEfficiency);
  cout<<"::::::GENERAL DETAILS::::::"<<endl;
  cout<<"Enter the number of miles per year to be driven:"<<endl;
  cin>>milesPerYear;
  intChecker(milesPerYear);
  cout<<"Enter the estimated price per gallon of gasoline over the course of the 5 years:"<<endl;
  cin>>gasPrice;
  doubleChecker(gasPrice);
  Car regular = Car("Regular", initCost, finalCost, fuelEfficiency);
  cout<<"Enter cost preference:"<<endl<<"For minimized gas consumption, enter \"Gas\". For minimized total cost, enter \"Cost\"."<<endl;
  cin>>gasOrCost;
  stringChecker(gasOrCost);
  if (gasOrCost == "Gas") {
    if (hybrid.gasConsumed(milesPerYear) < regular.gasConsumed(milesPerYear)) {
      hybrid.toString(milesPerYear, gasPrice);
      regular.toString(milesPerYear, gasPrice);
    } else {
      regular.toString(milesPerYear, gasPrice);
      hybrid.toString(milesPerYear, gasPrice);
    }
  } else {
    if (hybrid.getTotalCost(milesPerYear, gasPrice) < regular.getTotalCost(milesPerYear, gasPrice)) {
      hybrid.toString(milesPerYear, gasPrice);
      regular.toString(milesPerYear, gasPrice);
    } else {
      regular.toString(milesPerYear, gasPrice);
      hybrid.toString(milesPerYear, gasPrice);
    }
  }
  system("pause");
  return 0;
}
